datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Event {
  id                 String                       @id @default(cuid())
  createdAt          DateTime                     @default(now())
  updatedAt          DateTime                     @updatedAt
  endDatetime        DateTime?
  description        String?
  title              String?
  startDatetime      DateTime?
  user               User?                        @relation(fields: [userId], references: [id])
  userId             String?
  photos             Photo[]
  photosLimitPerUser Int?
  imagePreviewUrl    String?
  guestsLimit        Int?
  photosAvailability EnumEventPhotosAvailability?
}

model Photo {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  imageUrl  String?
  event     Event?   @relation(fields: [eventId], references: [id])
  eventId   String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  id             String              @id @default(cuid())
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  firstName      String?
  lastName       String?
  username       String              @unique
  email          String?             @unique
  password       String
  roles          Json
  events         Event[]
  photos         Photo[]
  uniqueUsername String?
  userPassword   String?
  userRoles      EnumUserUserRoles[]
  emailAddress   String?
}

model Guest {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String?
}

enum EnumEventPhotosAvailability {
  Option1
}

enum EnumUserUserRoles {
  Option1
}
